#include "../../ray.conf"
#include "../../ray_advanced.conf"
#include "../../shader/math.fxsub"
#include "../../shader/common.fxsub"
#include "../../shader/shadowcommon.fxsub"

float3 LightPosition : CONTROLOBJECT<string name="(OffscreenOwner)"; string item = "Position";>;

texture DiffuseMap: MATERIALTEXTURE;
sampler DiffuseMapSamp = sampler_state 
{
	texture = <DiffuseMap>;
	MINFILTER = POINT; MAGFILTER = POINT; MIPFILTER = POINT;
	ADDRESSU  = WRAP; ADDRESSV  = WRAP;
};

void ShadowMapGenVS(
	in float4 Position : POSITION, 
	in float2 Texcoord : TEXCOORD0, 
	out float2 oTexcoord0 : TEXCOORD0,
	out float4 oTexcoord1 : TEXCOORD1,
	out float4 oTexcoord2 : TEXCOORD2,
	out float4 oPosition  : POSITION,
	uniform float face)
{
	oTexcoord0 = Texcoord;
	oTexcoord1 = mul(Position, matWorld);
	oTexcoord1 = mul(oTexcoord1, CreateDualViewMatrix(LightPosition, face));
	oTexcoord2 = oPosition = mul(oTexcoord1, CreateDualProjMatrix(oTexcoord1, mPointLightNear, mPointLightFar, face));
}

float4 ShadowMapGenPS(
	in float2 coord : TEXCOORD0,
	in float3 view : TEXCOORD1,
	in float4 proj : TEXCOORD2,
	uniform float face) : COLOR
{
	clip(proj.y * face);
	float3 viewdir = normalize(view);
	clip(0.7f - dot(viewdir, float3(0.0f,0.0f,-1.0f)));

#if CASTER_ALPHA_ENABLE
	clip(!opadd - 0.001f);
	float alpha = MaterialDiffuse.a;
#if CASTER_ALPHA_MAP_ENABLE
	if (use_texture) alpha *= tex2D(DiffuseMapSamp, coord).a;
#endif
	clip(alpha - CasterAlphaThreshold);
#endif
	return ComputeMoments(proj.z / proj.w).xyxy;
}

technique DepthTecSS<string MMDPass = "object_ss";
> {
	pass DrawObjectF {
		AlphaBlendEnable = false; AlphaTestEnable = false;
		VertexShader = compile vs_3_0 ShadowMapGenVS(1);
		PixelShader  = compile ps_3_0 ShadowMapGenPS(1);
	}
	pass DrawObjectB {
		AlphaBlendEnable = false; AlphaTestEnable = false;
		VertexShader = compile vs_3_0 ShadowMapGenVS(-1);
		PixelShader  = compile ps_3_0 ShadowMapGenPS(-1);
	}
}

technique DepthTec0<string MMDPass = "object";>{}
technique EdgeTec<string MMDPass = "edge";>{}
technique ShadowTec<string MMDPass = "shadow";>{}
technique ZplotTec<string MMDPass = "zplot";>{}