#define LUT_SIZE 32
#define LUT_WIDTH LUT_SIZE * LUT_SIZE
#define LUT_LINEAR_RANGE 14
#define LUT_LINEAR_GREY 0.18
#define LUT_EXPOSURE_GREY 444

texture ColorGradingMap : RENDERCOLORTARGET<
	int2 Dimensions = {LUT_WIDTH, LUT_SIZE};
	string Format = "A2B10G10R10";
>;
sampler ColorGradingMapSamp = sampler_state {
	texture = <ColorGradingMap>;
	MinFilter = LINEAR; MagFilter = LINEAR; MipFilter = NONE;
	AddressU = CLAMP; AddressV = CLAMP;
};

float mContrastAllRP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ContrastAllR+";>;
float mContrastAllGP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ContrastAllG+";>;
float mContrastAllBP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ContrastAllB+";>;
float mSaturationAllRP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "SaturationAllR+";>;
float mSaturationAllGP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "SaturationAllG+";>;
float mSaturationAllBP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "SaturationAllB+";>;
float mGammaAllRP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "GammaAllR+";>;
float mGammaAllGP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "GammaAllG+";>;
float mGammaAllBP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "GammaAllB+";>;
float mColorAllRP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ColorAllR+";>;
float mColorAllGP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ColorAllG+";>;
float mColorAllBP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ColorAllB+";>;
float mColorOffsetAllRP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ColorOffsetAllR+";>;
float mColorOffsetAllGP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ColorOffsetAllG+";>;
float mColorOffsetAllBP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ColorOffsetAllB+";>;

float mContrastLowRP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ContrastLowR+";>;
float mContrastLowGP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ContrastLowG+";>;
float mContrastLowBP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ContrastLowB+";>;
float mSaturationLowRP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "SaturationLowR+";>;
float mSaturationLowGP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "SaturationLowG+";>;
float mSaturationLowBP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "SaturationLowB+";>;
float mGammaLowRP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "GammaLowR+";>;
float mGammaLowGP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "GammaLowG+";>;
float mGammaLowBP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "GammaLowB+";>;
float mColorLowRP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ColorLowR+";>;
float mColorLowGP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ColorLowG+";>;
float mColorLowBP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ColorLowB+";>;
float mColorOffsetLowRP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ColorOffsetLowR+";>;
float mColorOffsetLowGP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ColorOffsetLowG+";>;
float mColorOffsetLowBP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ColorOffsetLowB+";>;

float mContrastMidRP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ContrastMidR+";>;
float mContrastMidGP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ContrastMidG+";>;
float mContrastMidBP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ContrastMidB+";>;
float mSaturationMidRP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "SaturationMidR+";>;
float mSaturationMidGP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "SaturationMidG+";>;
float mSaturationMidBP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "SaturationMidB+";>;
float mGammaMidRP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "GammaMidR+";>;
float mGammaMidGP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "GammaMidG+";>;
float mGammaMidBP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "GammaMidB+";>;
float mColorMidRP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ColorMidR+";>;
float mColorMidGP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ColorMidG+";>;
float mColorMidBP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ColorMidB+";>;
float mColorOffsetMidRP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ColorOffsetMidR+";>;
float mColorOffsetMidGP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ColorOffsetMidG+";>;
float mColorOffsetMidBP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ColorOffsetMidB+";>;

float mContrastHighRP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ContrastHighR+";>;
float mContrastHighGP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ContrastHighG+";>;
float mContrastHighBP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ContrastHighB+";>;
float mSaturationHighRP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "SaturationHighR+";>;
float mSaturationHighGP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "SaturationHighG+";>;
float mSaturationHighBP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "SaturationHighB+";>;
float mGammaHighRP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "GammaHighR+";>;
float mGammaHighGP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "GammaHighG+";>;
float mGammaHighBP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "GammaHighB+";>;
float mColorHighRP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ColorHighR+";>;
float mColorHighGP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ColorHighG+";>;
float mColorHighBP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ColorHighB+";>;
float mColorOffsetHighRP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ColorOffsetHighR+";>;
float mColorOffsetHighGP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ColorOffsetHighG+";>;
float mColorOffsetHighBP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "ColorOffsetHighB+";>;

float mContrastAllRM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ContrastAllR-";>;
float mContrastAllGM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ContrastAllG-";>;
float mContrastAllBM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ContrastAllB-";>;
float mSaturationAllRM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "SaturationAllR-";>;
float mSaturationAllGM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "SaturationAllG-";>;
float mSaturationAllBM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "SaturationAllB-";>;
float mGammaAllRM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "GammaAllR-";>;
float mGammaAllGM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "GammaAllG-";>;
float mGammaAllBM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "GammaAllB-";>;
float mColorAllRM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ColorAllR-";>;
float mColorAllGM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ColorAllG-";>;
float mColorAllBM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ColorAllB-";>;
float mColorOffsetAllRM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ColorOffsetAllR-";>;
float mColorOffsetAllGM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ColorOffsetAllG-";>;
float mColorOffsetAllBM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ColorOffsetAllB-";>;

float mContrastLowRM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ContrastLowR-";>;
float mContrastLowGM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ContrastLowG-";>;
float mContrastLowBM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ContrastLowB-";>;
float mSaturationLowRM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "SaturationLowR-";>;
float mSaturationLowGM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "SaturationLowG-";>;
float mSaturationLowBM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "SaturationLowB-";>;
float mGammaLowRM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "GammaLowR-";>;
float mGammaLowGM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "GammaLowG-";>;
float mGammaLowBM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "GammaLowB-";>;
float mColorLowRM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ColorLowR-";>;
float mColorLowGM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ColorLowG-";>;
float mColorLowBM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ColorLowB-";>;
float mColorOffsetLowRM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ColorOffsetLowR-";>;
float mColorOffsetLowGM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ColorOffsetLowG-";>;
float mColorOffsetLowBM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ColorOffsetLowB-";>;

float mContrastMidRM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ContrastMidR-";>;
float mContrastMidGM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ContrastMidG-";>;
float mContrastMidBM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ContrastMidB-";>;
float mSaturationMidRM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "SaturationMidR-";>;
float mSaturationMidGM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "SaturationMidG-";>;
float mSaturationMidBM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "SaturationMidB-";>;
float mGammaMidRM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "GammaMidR-";>;
float mGammaMidGM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "GammaMidG-";>;
float mGammaMidBM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "GammaMidB-";>;
float mColorMidRM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ColorMidR-";>;
float mColorMidGM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ColorMidG-";>;
float mColorMidBM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ColorMidB-";>;
float mColorOffsetMidRM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ColorOffsetMidR-";>;
float mColorOffsetMidGM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ColorOffsetMidG-";>;
float mColorOffsetMidBM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ColorOffsetMidB-";>;

float mContrastHighRM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ContrastHighR-";>;
float mContrastHighGM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ContrastHighG-";>;
float mContrastHighBM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ContrastHighB-";>;
float mSaturationHighRM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "SaturationHighR-";>;
float mSaturationHighGM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "SaturationHighG-";>;
float mSaturationHighBM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "SaturationHighB-";>;
float mGammaHighRM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "GammaHighR-";>;
float mGammaHighGM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "GammaHighG-";>;
float mGammaHighBM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "GammaHighB-";>;
float mColorHighRM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ColorHighR-";>;
float mColorHighGM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ColorHighG-";>;
float mColorHighBM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ColorHighB-";>;
float mColorOffsetHighRM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ColorOffsetHighR-";>;
float mColorOffsetHighGM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ColorOffsetHighG-";>;
float mColorOffsetHighBM : CONTROLOBJECT<string name="ray_controller_minus.pmx"; string item = "ColorOffsetHighB-";>;

float mWeightLowP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "WeightLow+";>;
float mWeightLowM : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "WeightLow-";>;
float mWeightHighP : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "WeightHigh+";>;
float mWeightHighM : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "WeightHigh-";>;

float mVisualizationLUT : CONTROLOBJECT<string name="ray_controller_plus.pmx"; string item = "VisualizationLUT";>;

static float3 mColorContrastAllP = float3(mContrastAllRP, mContrastAllGP, mContrastAllBP);
static float3 mColorSaturationAllP = float3(mSaturationAllRP, mSaturationAllGP, mSaturationAllBP);
static float3 mColorGammaAllP = float3(mGammaAllRP, mGammaAllGP, mGammaAllBP);
static float3 mColorGainAllP = float3(mColorAllRP, mColorAllGP, mColorAllBP);
static float3 mColorOffsetAllP = float3(mColorOffsetAllRP, mColorOffsetAllGP, mColorOffsetAllBP);

static float3 mColorContrastLowP = float3(mContrastLowRP, mContrastLowGP, mContrastLowBP);
static float3 mColorSaturationLowP = float3(mSaturationLowRP, mSaturationLowGP, mSaturationLowBP);
static float3 mColorGammaLowP = float3(mGammaLowRP, mGammaLowGP, mGammaLowBP);
static float3 mColorGainLowP = float3(mColorLowRP, mColorLowGP, mColorLowBP);
static float3 mColorOffsetLowP = float3(mColorOffsetLowRP, mColorOffsetLowGP, mColorOffsetLowBP);

static float3 mColorContrastMidP = float3(mContrastMidRP, mContrastMidGP, mContrastMidBP);
static float3 mColorSaturationMidP = float3(mSaturationMidRP, mSaturationMidGP, mSaturationMidBP);
static float3 mColorGammaMidP = float3(mGammaMidRP, mGammaMidGP, mGammaMidBP);
static float3 mColorGainMidP = float3(mColorMidRP, mColorMidGP, mColorMidBP);
static float3 mColorOffsetMidP = float3(mColorOffsetMidRP, mColorOffsetMidGP, mColorOffsetMidBP);

static float3 mColorContrastHighP = float3(mContrastHighRP, mContrastHighGP, mContrastHighBP);
static float3 mColorSaturationHighP = float3(mSaturationHighRP, mSaturationHighGP, mSaturationHighBP);
static float3 mColorGammaHighP = float3(mGammaHighRP, mGammaHighGP, mGammaHighBP);
static float3 mColorGainHighP = float3(mColorHighRP, mColorHighGP, mColorHighBP);
static float3 mColorOffsetHighP = float3(mColorOffsetHighRP, mColorOffsetHighGP, mColorOffsetHighBP);

static float3 mColorContrastAllM = float3(mContrastAllRM, mContrastAllGM, mContrastAllBM);
static float3 mColorSaturationAllM = float3(mSaturationAllRM, mSaturationAllGM, mSaturationAllBM);
static float3 mColorGammaAllM = float3(mGammaAllRM, mGammaAllGM, mGammaAllBM);
static float3 mColorGainAllM = float3(mColorAllRM, mColorAllGM, mColorAllBM);
static float3 mColorOffsetAllM = float3(mColorOffsetAllRM, mColorOffsetAllGM, mColorOffsetAllBM);

static float3 mColorContrastLowM = float3(mContrastLowRM, mContrastLowGM, mContrastLowBM);
static float3 mColorSaturationLowM = float3(mSaturationLowRM, mSaturationLowGM, mSaturationLowBM);
static float3 mColorGammaLowM = float3(mGammaLowRM, mGammaLowGM, mGammaLowBM);
static float3 mColorGainLowM = float3(mColorLowRM, mColorLowGM, mColorLowBM);
static float3 mColorOffsetLowM = float3(mColorOffsetLowRM, mColorOffsetLowGM, mColorOffsetLowBM);

static float3 mColorContrastMidM = float3(mContrastMidRM, mContrastMidGM, mContrastMidBM);
static float3 mColorSaturationMidM = float3(mSaturationMidRM, mSaturationMidGM, mSaturationMidBM);
static float3 mColorGammaMidM = float3(mGammaMidRM, mGammaMidGM, mGammaMidBM);
static float3 mColorGainMidM = float3(mColorMidRM, mColorMidGM, mColorMidBM);
static float3 mColorOffsetMidM = float3(mColorOffsetMidRM, mColorOffsetMidGM, mColorOffsetMidBM);

static float3 mColorContrastHighM = float3(mContrastHighRM, mContrastHighGM, mContrastHighBM);
static float3 mColorSaturationHighM = float3(mSaturationHighRM, mSaturationHighGM, mSaturationHighBM);
static float3 mColorGammaHighM = float3(mGammaHighRM, mGammaHighGM, mGammaHighBM);
static float3 mColorGainHighM = float3(mColorHighRM, mColorHighGM, mColorHighBM);
static float3 mColorOffsetHighM = float3(mColorOffsetHighRM, mColorOffsetHighGM, mColorOffsetHighBM);

static float3 mColorContrastAll   = lerp(lerp(1.0, 3.0, mColorContrastAllP), 0, mColorContrastAllM);
static float3 mColorSaturationAll = lerp(lerp(1.0, 3.0, mColorSaturationAllP), 0, mColorSaturationAllM);
static float3 mColorGammaAll      = lerp(lerp(1.0, 3.0, mColorGammaAllP), 0, mColorGammaAllM);
static float3 mColorGainAll       = lerp(lerp(1.0, 3.0, mColorGainAllP), 0, mColorGainAllM);
static float3 mColorOffsetAll     = lerp(lerp(0.0, 3.0, mColorOffsetAllP), -3.0, mColorOffsetAllM);

static float3 mColorContrastLow   = lerp(lerp(1.0, 3.0, mColorContrastLowP), 0, mColorContrastLowM);
static float3 mColorSaturationLow = lerp(lerp(1.0, 3.0, mColorSaturationLowP), 0, mColorSaturationLowM);
static float3 mColorGammaLow      = lerp(lerp(1.0, 3.0, mColorGammaLowP), 0, mColorGammaLowM);
static float3 mColorGainLow       = lerp(lerp(1.0, 3.0, mColorGainLowP), 0, mColorGainLowM);
static float3 mColorOffsetLow     = lerp(lerp(0.0, 3.0, mColorOffsetLowP), -3.0, mColorOffsetLowM);

static float3 mColorContrastMid   = lerp(lerp(1.0, 3.0, mColorContrastMidP), 0, mColorContrastMidM);
static float3 mColorSaturationMid = lerp(lerp(1.0, 3.0, mColorSaturationMidP), 0, mColorSaturationMidM);
static float3 mColorGammaMid      = lerp(lerp(1.0, 3.0, mColorGammaMidP), 0, mColorGammaMidM);
static float3 mColorGainMid       = lerp(lerp(1.0, 3.0, mColorGainMidP), 0, mColorGainMidM);
static float3 mColorOffsetMid     = lerp(lerp(0.0, 3.0, mColorOffsetMidP), -3.0, mColorOffsetMidM);

static float3 mColorContrastHigh   = lerp(lerp(1.0, 3.0, mColorContrastHighP), 0, mColorContrastHighM);
static float3 mColorSaturationHigh = lerp(lerp(1.0, 3.0, mColorSaturationHighP), 0, mColorSaturationHighM);
static float3 mColorGammaHigh      = lerp(lerp(1.0, 3.0, mColorGammaHighP), 0, mColorGammaHighM);
static float3 mColorGainHigh       = lerp(lerp(1.0, 3.0, mColorGainHighP), 0, mColorGainHighM);
static float3 mColorOffsetHigh     = lerp(lerp(0.0, 3.0, mColorOffsetHighP), -3.0, mColorOffsetHighM);

static float mColorCorrectionLowThreshold  = lerp(lerp(0.5, 1.0, mWeightLowP) , 0.0, mWeightLowM);
static float mColorCorrectionHighThreshold = lerp(lerp(0.5, 0.0, mWeightHighP), 1.0, mWeightHighM);

float3 log2lin(float3 color)
{
	return exp2((color - LUT_EXPOSURE_GREY / 1023.0) * LUT_LINEAR_RANGE) * LUT_LINEAR_GREY;
}

float3 lin2log(float3 LinearColor)
{
	float3 color = log2(LinearColor) / LUT_LINEAR_RANGE - log2(LUT_LINEAR_GREY) / LUT_LINEAR_RANGE + LUT_EXPOSURE_GREY / 1023.0;
	return saturate(color);
}

float3 CreateColorSpectrum(float2 coord, float size = LUT_SIZE)
{
	float3 rgb;
	rgb.r = frac(coord.x * size);
	rgb.b = coord.x - rgb.r / size;
	rgb.g = coord.y;
	return log2lin(rgb * size / (size - 1));
}

float3 CreateColorSpectrumDebug(float3 color, sampler sourceLUT, float2 coord, float ratio, float alpha, float size = LUT_SIZE)
{
	float tileX = size / 46.0;
	float tileY = 1 - tileX / size * ratio;

	if (coord.x <= tileX && coord.y >= tileY)
	{
		coord = float2(coord.x / tileX, (coord.y - tileY) / (1 - tileY));
		color = lerp(tex2Dlod(sourceLUT, float4(coord, 0, 0)).rgb, color, alpha);
	}

	return color;
}

float4 ColorLookupTable2D(sampler lut, float3 color, float size = LUT_SIZE)
{
	color = lin2log(color);
	color = color * ((size - 1) / size) + (0.5f / size);

	float slice = color.z * size - 0.5;
	float s = frac(slice);
	slice -= s;

	float u = (color.x + slice) / size;
	float v = color.y;

	float2 uv0 = float2(u, v);
	float2 uv1 = float2(u + 1.0f / size, v);

	float4 col0 = tex2Dlod(lut, float4(uv0, 0, 0));
	float4 col1 = tex2Dlod(lut, float4(uv1, 0, 0));

	return lerp(col0, col1, s);
}

void GenerateColorLookupVS(
	in float4 Position : POSITION,
	in float4 Texcoord : TEXCOORD0,
	out float4 oTexcoord  : TEXCOORD0,
	out float4 oPosition  : POSITION)
{
	oTexcoord = Texcoord;
	oPosition = Position;
}

float4 GenerateColorLookupPS(in float2 coord : TEXCOORD0) : COLOR 
{
	float3 color = CreateColorSpectrum(coord);

	color = ColorTemperature(color, mColorTemperature);
	color = ColorCorrect(color, mColorSaturation, mColorContrast, mColorGamma, mColorBalanceP, mColorBalanceM);
	color = ColorCorrectAll(
		color,
		mColorSaturationAll,
		mColorContrastAll,
		mColorGammaAll,
		mColorGainAll,
		mColorOffsetAll,

		mColorSaturationLow,
		mColorContrastLow,
		mColorGammaLow,
		mColorGainLow,
		mColorOffsetLow,

		mColorSaturationMid,
		mColorContrastMid,
		mColorGammaMid,
		mColorGainMid,
		mColorOffsetMid,

		mColorSaturationHigh,
		mColorContrastHigh,
		mColorGammaHigh,
		mColorGainHigh,
		mColorOffsetHigh,

		mColorCorrectionLowThreshold,
		mColorCorrectionHighThreshold);
	color = ColorToneMapping(color);

	return float4(linear2srgb(color), 0);
}